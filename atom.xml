<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LIGENE</title>
  
  <subtitle>Notes of Bioinformatics and Genomics</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.ligene.cn/"/>
  <updated>2018-08-02T04:01:02.094Z</updated>
  <id>http://blog.ligene.cn/</id>
  
  <author>
    <name>adong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>许章润：我们当下的恐惧与期待</title>
    <link href="http://blog.ligene.cn/2018/08/02/Xu-Zhangrun/"/>
    <id>http://blog.ligene.cn/2018/08/02/Xu-Zhangrun/</id>
    <published>2018-08-02T03:48:04.000Z</published>
    <updated>2018-08-02T04:01:02.094Z</updated>
    
    <content type="html"><![CDATA[<p>摘要:<br>清华大学许章润教授敢在国内公开批评时政，真国家栋梁也。<br><a id="more"></a><br>包括整个官僚集团在内，当下全体国民对于国家发展方向和个人身家性命安危，再度深感迷惘，担忧日甚，已然引发全民范围一定程度的恐慌。盖因近年来的立国之道，突破了下列底线原则，倒行逆施，而这曾是“文革”后执政党收拾合法性，并为三十多年的“改革开放”证明为最具正当性的政治路线，也是全体公民和平共处最低限度的社会政治共识，本不该动摇，千万不能摇撼。</p><p>##一、四条底线<br>那么，是哪四项底线原则呢？<br>第一，维持基本治安，明确国家愿景。结束连年“运动”，中止“和尚打伞无法无天”，以包括连番“严打”在内的强力整肃，阻止社会失范，维护社会治安，同时尽力实现社会和解，大致提供了一般民众生聚作息的基本秩序条件，是四十年里现有政体的底线合法性，也是历经劫难后的亿万国民拥护“改革开放”的原因所在。虽说从治安到公正，自就业而尊严，公共产品的内涵缺一不可，而且时移世易，诉求必然逐次提升，但在高端产品阙如之际好歹有底线保障，对于历经动乱和苦难的百姓而言，总是好事。毕竟，升斗小民，日常起居的美好愿景不过是安宁生活，期期于温饱小康，而以世道安靖为前提。虽说此种治安格局及其后来发展出来的“维稳”路径，反过来滋生出新的问题，暴露出政治统治正当性不足这一致命病灶，但就其提供基本治安而言，却是成功的，也是合意的。<br>不宁唯是，三十多年里，尤其是1992年春夏之后，执政党以经济建设为中心，所谓“专心致志谋发展，聚精会神搞建设”，坚持二十年不变，则官民互动之下，几个回合下来，一般国民认为不管谁上谁下，他唱罢你登场，反正发展经济、专心国家建设这一条蔚为基本国策不会改变。有此预期兜底，遂仿佛多所安心，接受既有政体安排，你当你的官，我过我的小日子，而合作共谋出此刻这一社会治安格局。换言之，不是这个梦那个梦，而是发展经济社会，专注于国家建设，别搞运动，安宁生计，凡此底线原则，筑就了展示并通达国家道义愿景的起点，也是百姓接受统治的前提。<br>第二，有限尊重私有产权，容忍国民财富追求。从废除私有制，声言私产为万恶之源，到有限保护私有产权，容忍亿万人民对于财富增长的追求，并且诉诸立宪，所谓“私产入宪”，释放了发家致富的普遍人欲，给予追求美好生活的人性志向以正面政治迎应。在此情形下，不仅国家经济实力空前增长，并以此支撑了科教文卫与国防武备，特别是庞大的党政费用，而且，一般国民亦多获益，生活水准多所提升。此为中国经济快速成长的法制缘由，同时说明了既有政制合法性之获得全民容忍的经济原因。毕竟，动什么，别动大家的钱袋子，是硬道理。其实，此为一切正常人类社会的通则，近世产权理念与人性观念为此特加张本，“改革开放”以“拨乱反正”皈依普世大道，实为知错能改善莫大焉。<br>第三，有限容忍市民生活自由。几十年里，公民社会不见成长，稍有冒头即遭整治，严重阻滞了国民政治心智发育与公民人格养成。政治社会更是不见踪影，导致中华国族的政治成熟捉襟见肘。但是，伦理社会基本恢复，经济社会与市民社会确乎多所发育。市民自由而非公民自由，尤在市场经济较为发达省份，早成生活事实。所谓市民生活及其市民自由，指的是私性领域的有限生活权利，着重于吃喝拉撒卿卿我我，特别是对于自家生活方式无涉政治的自我支配，至少是发型服饰无需看官家脸色行事。大家搓澡搓脚，旅游宴飨婚外恋，小资麻麻，这世道才有烟火气。较诸毛氏极权政治下千篇一律的铁桶生活，连裤裆都管得死死的，此刻国民暂弃公民身份追求，而满足于市民幸福，回归普通人的日常本色，既无可厚非，更是大家之能容忍刻下政体的原因所在。就此而言，警力以抓嫖为柄，实施定向人身控制，造成普遍不安全感，虽于一案一事得计，可丧失的却是普遍的市民预期，反而得不偿失。至于北京市以整治市容为据，而将好端端便民商铺酒肆一律封拆，彰显的是“光荣政治”对于市民社会的为所欲为，一种权力的美学恶趣。——就是香港、伦敦与巴黎，超大规模国际大都会，不还都容忍并规划街市交易嘛。至于市场经济之下，笑贫不笑娼与娱/愚乐至死，忸怩作态、无德无识无耻却大富大贵，亦为普通众生的市民生存，遵循的是商品逻辑，讲述了一个不得不为了市民常态生聚而付出文明腐朽代价的现代喜剧与后现代闹剧。<br>第四，实行政治任期制。三十多年里，究其实质，虽说社会多元与政治容忍度明显增长，但整个政治体制未见任何具有实质进步意义的变革，骨子里依旧是那一套陈腐而残忍的敌我斗争与专政理念，外加上“吃江山”的贪婪丑态。但因立宪规定了包括国家主席和国务总理在内的政治任期制，以及“人权入宪”，并经2003年以还的十年任期后实现党内和平禅让，终于兑现了最多连任两届、最长十年这一宪法规定，纸上的宪法规定至此似乎积习而为“宪法惯例”，好像立法与实践均双双尘埃落地，这便总算给予国民以一定政治安全感，也令国际社会觉得中国正在步入现代政治。不妨说，三十多年里嚷嚷政体改革而政体岿然不动，这是唯一看得见摸得着也拿得出手的政治改革成果。在大家看来，不管你如何，不过就是十年的事。诸位，百姓无辜，小民蝼蚁，平时面朝黄土背朝天，分散如沙，为养家糊口而劳生息死，根本无力抵抗任何组织化强权。此刻终于好歹有此“十年任期”，似乎感觉也还算是对于随时可能爆发的政治任性的一招制约，这便随遇而安地打理自家柴米油盐也。<br>综上所述，总体来看，以治安为导向的社会控制，在提供治安这一基本公共产品层面，依然有效，但发展至“维稳”体制，局部地区甚至是一种准戒严状态，则尾大不掉，靡费非常，说明体制潜力已然用尽，有待升级换代。特别是此次中美贸易战争，将国力的虚弱与制度软肋暴露无遗，更加强化了不安全感。此前高峰申言，“执政合法性不是一劳永逸的”，对此危机似乎还有所警醒，而近年来对此严重缺乏敏感，却自信膨胀，类如“扶贫运动”和这波正在进行的“打黑运动”这种准运动式政经操作方式再度登场，令国家愿景的确定性再度打折。另一方面，对于私有产权的有限保护与一般国民发家致富欲望的有限满足，不仅促进了经济增长，而且提升了亿万国民的生活水准，但却终于遭遇所谓“国进民退”与实际生活中屡屡发生的公权力肆意剥夺私有产权恶性案件的证伪，倒逼出“私权神圣”这一国民诉求，而背后的逻辑不过是“权力不能私有，财产不能公有”这一公民认知。本来，“分清公私”方能“提供和平”，二者均为古今政治的基本内涵，今日于此必得过关而后安。而最为世诟病并令人胆战心惊的，便是修宪取消政治任期制，等于一笔勾销了三十多年的改革开放，一巴掌直要把中国打回那个令人恐惧的毛时代，伴随着甚嚣尘上而又可笑之至的领袖个人崇拜，这才引发出下列全面恐慌。</p><p>##二、八种担忧<br>在此，总括而言，大家的担忧与恐慌，主要集中在下列八个方面。<br>第一，产权恐惧。几十年里积攒的财富，不管多少，能否保有？既有的生活方式能否持续？法定的产权关系还能获得立法所宣谕的保障吗？会不会因为得罪了哪位实权人物（包括村委会主任）就企业破产、家破人亡？凡此种种，最近几年间，反倒随着时间推移，而愈发缺乏确定性，遂至上上下下恐慌不已。它首先冲击的是在改革开放大潮中已然掘金成功人士，而以大规模富人移民现象作为应对之道。一般中产阶级中下层，温饱有余，但却同样为生老病死进程中随时可能降临的任何意外而担惊受怕，尤其害怕通胀通缩钱不值钱。当然，富人移民的原因复杂，既有追求更高生活品质的，也不乏洗钱赶紧溜的，更有权贵携款逍遥法外的，但普遍缺乏产权安全感则为通例。官商一体权贵的巧取豪夺是“改革开放”的最大赢家，也是富人移民的主体。官方信息披露有限，民间传说嘈嘈切切，加上官媒时不时演奏个“共产党的终极理想就是消灭私有制”之过门，伴随着“打土豪分田地”式民粹叫嚣，更且加剧了此种不安全感。恐慌之际，高峰居然集体学习《共产党宣言》，一份曾令世界不得安生的两位年轻天才的轻狂之作，其予全体国民的负面心理震撼，也只有在此语境下，才能获得真切解释。<br>第二，再次凸显政治挂帅，抛弃以经济建设为中心这一基本国策。几年来，意识形态火药味愈来愈浓，以争夺话语权为标识，而实则依仗公权力施行意识形态迫害的阵势，已然导致知识界的普遍恐慌。置此情形下，自我审查，层层加码，导致出版业遭受重挫，舆论界钳口日甚，中国与外部世界勾连之阻力加剧。甚至出现了鼓励小朋友举报告发父母这类官方宣传品，违忤基本伦理，既反传统又违现代，活脱脱一副极权政治嘴脸，令人不得不想起曾经的野蛮“文革”岁月，实在匪夷所思。影响所及，大学教师连连因言获罪，因为担忧党政宣传口子找麻烦与课堂上学生特务告密，而战战兢兢。更为严重的是，地方官僚基于政治担忧普遍不作为，而中国经济的成长实在有赖于地方官员基于政绩观而认真干活的发展观。那边厢，“重庆模式”那帮余孽与高校中曾经的“三种人”联袂一体，今日摇身一变，滚雪球，构成“新极左”，喊打喊杀。<br>本来，一般国民对于“政治运动”之苦记忆犹新，新生代汲汲于市民生活，已然习惯于常态经济社会与市民生活，对于人为的“政治挂帅”与毫无逻辑的极权泛政治化倾向，了无兴趣，也不关心，硬逼他们，只能徒增反感。实际上，几十年来，上下一心，这个政治体制还能获得国民容忍，就在于国家以经济建设为中心，全心全意谋发展，不再天天运动式“讲政治”，停止或者减少干涉私人生活，更不会上演什么“宁要社会主义草，不要资本主义苗”这类荒唐闹剧。终究而言，“以经济建设为中心”发展到一定阶段，必需转向以宪政建设为中心，而于政经两面次第推进建设现代国族，为现代中国接生。但就目下而言，最低限度却依然应该是固守前者，再谋他图，岂能背道而驰。<br>第三，又搞阶级斗争。前几年官媒与官方意识形态主管官员屡提阶级斗争，早已让大家一阵恐慌。这几年的施政方向，令人再度怀疑会否重搞斯大林—毛韶山氏阶级斗争那一套。犹有甚者，随着反腐之第次展开，特别是新建国家监察委及其权力之无限扩大，将全体公教人员悉数划入，连普通医生、护士与教师都“全覆盖”，不仅未能提升大家基于法制的安全感，相反，却不禁令人联想到克格勃式辖制以及残酷的党内斗争的可能性，而再度引发重回过往阶级斗争岁月的阵阵恐慌。因而，对于“斗，斗，斗”这一恐怖政治模式的国民记忆，及其是否重回华夏大地的普遍担忧，使得政治疏离感日增，和合与祥和气氛日减。本来，“私产入宪”与“人权入宪”，伴随着两任到顶这一党内禅让制的施行，有望朝向一个常态国家渐行渐近，意味着不再需要动用“斗”字诀，可这几年的做法却仿佛与此背道而驰，大家自然心惊胆战。<br>第四，再度关门锁国，与以美国为代表的西方世界闹僵，却与朝鲜这类恶政打得火热。中国的经济成长与社会进步，是中国文明的自我进步，循沿的是超逾一个半世纪的文明大转型固有逻辑，也是现代世界体系在中国落地后之发育成长，并非外力所能主导。但在具体操作层面，却是在重启“改革开放”而与西方世界关系改善之后，以进步主义为导向，以“与世界接轨”为目标，而搭乘上全球化市场经济快车实现的。没有“开放倒逼改革”，就没有今天的中国经济、社会和文化。而与朝鲜、委内瑞拉这类失败国家、极权国家打得火热，违背民意，忤逆历史潮流，实在不智。虽说民间调侃，鉴于中国大量官商的子女玉帛均寄存于彼方山水，故而不用担心两国交恶，但明暗之间一闪失，倒霉的是这个据说全民所有的国族，而必然落在每个具体的百姓人头，摇撼的是他们的口粮与衣衫。在此，究其缘由，就在于以政党理性代替国家理性，而以扭曲的国家理性压制公民理性，不思进取，一意孤行，早已落后于时代思潮，所以然哉，有以然哉。<br>第五，对外援助过量，导致国民勒紧裤腰带。据说中国已成世界最大外援国，动不动“大手笔”划拉几十亿几百亿。此就一个发展中人口大国而言，不少地方还处在前现代，实在是不自量力。究其根源，扩张性“光荣政治”逻辑作祟，蔚为主因，而公子哥心态与做派亦且难辞其咎。现有的国家财富，包括那三万亿外储在内，是四十年里几代人血汗累积的，更是远自洋务运动以还数代中国人奋斗的善果，怎能随便乱花。长期高速的经济增长终有结束之时，则如此慷慨，类如当年无原则“支援亚非拉”，导致亿万国民勒紧裤腰带过日子，甚至于饿殍遍野，在在不能重演。此次中美贸易战爆发后官媒以“共克时艰”号令，傥论什么“先天下之忧而忧，后天下之乐而乐”，立刻遭遇百姓无情嘲讽，“去你妈的，都哪儿对哪儿呀”，正说明人心所向，早已非当年那般忽悠得了的了。<br>第六，知识分子政策左转与施行思想改造。虽然早就说知识分子是劳动人民的一部分，但一有风吹草动就拿他们当外人，甚至当敌人，已成国朝政治的最佳晴雨表，也是政制底色的政治表达。教育部一再声言要加强对教师的思想教育，网传必须重点防范海归教师，以及高校中的极少数文革遗左纷纷如打鸡血般跳将出来喊打喊杀等等，都令人担忧所谓的知识分子改造政策再度降临，特别是伴随着政策左转而再次施行思想改造运动，乃至于不排除更为严重的态势。“妄议”大棒挥舞，人人噤若寒蝉，还有什么言论自由可言。而无自由思想与独立精神，则探索未知、学术精进与思想创发云乎哉。本来，历经这四十年的积累奋斗，再好好干一、两代人，中华文明有望迎来一个思想学术的全盛高峰。但是，假若此种钳口政策再延续下去，甚至日益趋紧，则此种可能性无望变成现实性，中华国族终究只是精神侏儒与文明小国。<br>第七，陷入重度军备竞赛与爆发战争，包括新冷战。短短十年间，整个东亚其实已然陷入军备竞赛，但所幸爆发战争的概率依旧尚处可控层面。问题是，不能由此打断中国的常规发展，就此摧折了尚未最后水落石出的伟大现代转型。两年来，在“阻止中国陷入全面内战”与“保卫改革开放”两文中，笔者都曾指认中国逐渐于“维稳体制”之上又叠加了“战备体制”，就在于提示其危险性，防范其负面影响。此刻随着内政紧绷与外贸纠纷日甚，经济下滑可能性加剧，则其进程不可控因素增多，防范其不至被迫走向战争状态，不管是热战还是冷战，绝非杞人忧天。坊间舆议提醒中美贸易争端不应再引向意识形态之争，更不要进行政治模式之争，亦为同此忧虑而发，还算靠谱。<br>第八，改革开放终止与极权政治全面回归。虽说“改革”一词已然多少污名化，毕竟，恶政亦且假尔之名而行之，但在当下中国语境下，置身大转型尚未完成、有待临门一脚的现状，较诸爆炸性革命与极左式的倒退，改革依旧是最为稳妥的路径。改革空转，抑或不进则退，早已非只近几年的事了，实已延绵一届任期。照此趋势以往，“改革开放”会否就此终止，极权回归，亦未可知。此时此刻，全体国民之最大担忧，莫此为甚。说是极权回归，就在于胡温任期，仿佛出现极权向威权过渡趋势，故而称为“后极权时代全能型威权政制”。但这两年反其道而行之，这才引发“极权政治全面回归”的恐慌。中国近代史上，1894年的甲午战争与1937年抗战爆发，两度打断中国的现代进程，致使追求日常政治的努力付诸东流，中国的现代事业因而被迫延宕。今日这一波延绵将近两个世纪的大转型已到收尾时段，有待临门一脚，切切不能再因战祸而中断。倘若中断，下次历史机遇何时再来，恐伊于胡底矣。</p><p>##三、八项期待<br>当此之际，针对上述担忧与恐慌，从内政着眼，无涉经贸（包括大幅度减税），也不上纲上线到民主法治层面，仅就下列八项而言，具体而有形，允为时务。<br>第一，杜绝援外撒钱“大手笔”。非必要的无谓援外大撒把，砸钱，最令一般民众反感寒心。中国尚处发展爬坡时段，无论基础设施还是民生福利，均难题如山，任重道远。且不说养老、就业与教育，但就乡村凋敝而言，就压力山大，而需公权力多所措意。否则，半个中国仍处前现代，等于现代中国只是个半拉子工程，谈何文明复兴。近日中阿论坛期间宣布拨银两百亿美金，设立所谓阿拉伯国家“重建专项计划”，并且“探讨实施总额为10亿元人民币的项目，支持有关国家维稳能力建设”。可我们知道，海湾国家个个富得流油，何需尚有上亿未曾脱贫国民的中国在此充当冤大头，让人不禁感慨有司心肠何在，还把自家国民当人待吗？——纵便此间涉及“战略布局”，但难免搅入既有大国博弈，而导致战线过长，亦嫌稍早。而且，凡此支出，完全无视既有预决算体制，将最高国家权力机关的国库司库宪法职权撇在一旁，在实质性瘫痪既有官僚科层建制化之际，等于向宪制与法制开战。<br>第二，杜绝主场外交中的铺张浪费。开个平常的会，就使劲折腾，不计成本，劳民伤财，其实既无里子也无面子。此为“光荣政治”，而非“实利政治”，更非“实力政治”，亦非什么“中国人民自古以来具有热情好客的优良传统”，非徒谋虚荣者不为。照此思路，联合国所在地的纽约峨冠博带，岂非天天戒严不可；全球性组织最多的日内瓦和巴黎，衣香鬓影，还不夜夜都要放烟火。就国家自助体而言，概需以实力立世，而旨在谋取实利，同时不废道义心肠。两项既存，三者并立，沾溉国民，荣光不求自来。无此维度，汲汲于光荣政治那一套，当事者出头露面好像挺风光，而不恤民力，做冤大头，实则招人鄙夷，也会激发民愤。连举世嫌弃的隔壁独夫胖墩来，居然大阵仗迎送，那文图俱在、传闻中酒席宴上128万元一瓶的矮嘴茅台，说实在的，一下子令亿万国民离心离德。——还中国梦呢，做梦吧！<br>第三，取消退休高干的权贵特权。国朝体制，高干生养病死全赖国库，而享受超国民待遇。原有生活待遇、医疗标准与度假休养诸项，耗费巨量民脂民膏，大家耳闻目睹，而至今不敢公布，正说明见不得人。此种体制，承继的是朱姓子民、八旗子弟的奉养传统，既违忤曾经自诩之革命精神，更不符现代公民立国原则。若说什么“封建残余”，此为典型。国民痛恨不已，可毫无办法，遂成制度招恨之一大毒瘤。这边厢普通人民住院难，那边厢高干病房巍哉峨兮，隔离于一般病区，让多少百姓看在眼里恨在心里，而每一丝仇恨都可能在某个时刻于心田中成长为惊天雷暴。<br>第四，取消特供制度。七十多年里，其实早从延安时期就已开始，无论是在国民饥寒交迫的年代里，还是此刻亿万百姓为婴儿奶品、日常食品安全而提心吊胆之际，特供制度供养着这个号称人民政权的高层权贵，提供着一般人做梦都不敢想象的诸种特权，除开几个极权政体之外，举世找不出第二家，可谓豪奢之至，而无耻之尤。社会恒有差等，贤愚贫富实为自然，但那是结果，而非抹煞起点平等的公民理想，更非公然利用国库供养少数权贵。此制一日不除，“第34号”依旧，中国食品安全就一日没有保障，两方同样无任何真正的安全可言。<br>第五，实施官员财产阳光法案。有关于此，民间早已呼吁多年，居然毫无动静，说明其间猫腻最大，最见不得人。现有官员升迁程序中对于子女玉帛的说明，只限内部掌握，存见于干部档案，而一般国民无从知晓，遂使一切迷雾重重。而无论人力物力，还是技术手段，早已成熟，正为施行此制，并经由全国联网，用十四亿双眼睛施行有效监督，铺垫好一切基础。反腐而腐败不止，就在于搞成了内部的事，而非基于政治公开原则的法制作业，缺的就是阳光法案这一环。你们若非心虚，那就施行此制，让一切大白于天下吧！你们要是正心诚意，那就加入大多数国家均在其中的《艾格蒙国际反洗钱组织》吧！何必云山雾罩，将亿万国民当二百五。<br>第六，“个人崇拜”亟需赶紧刹车。改革开放四十年，没想到神州大地再度兴起领袖个人崇拜。党媒造神无以复加，俨然一副前现代极权国家的景象。而领袖像重现神州，高高挂起，仿佛神灵，平添诡异。再者，官员讲话，本为秘书手笔，不过等因奉此，居然汇编刊行，精装亮相，全球免费赠送，徒耗纸张，令人喷饭。此间不仅需要反思为何当事人如此弱智而好名，更需要检讨为何曾经遭遇此种戕害的偌大国家，包括她的芸芸“理论家”“研究者”，居然对此毫无抵抗力，却不乏舔痈吸疽之徒。而亿万人犹如虚无，竟然容忍其大行其道，奈何不了那几个马屁精大员，正说明所谓启蒙是一个未竟事业，需要每一代人在公共事务上公开运用自己的理性，方能如履如临而砥砺前行。而且，它更加说明中国尚未完全进入现代世俗理性的常态国家境界，而有待接续奋斗矣。<br>第七，恢复国家主席任期制。年初修宪，取消政治任期，令世界舆论哗然，让国人胆战心惊，顿生“改革四十年，一觉回从前”的忧虑。此间作业，等于凭空制造一个“超级元首”，无所制衡，令人不禁浮想联翩而顿生恐惧。因此，今明两年的适当时机，如秋季召开人大特别会议或者<br>明年三月全国人大例会，通过再度修宪，恢复国家主席任期制，以保卫改革开放、防范重回文革极权政治。《宪法》既立，无论是何种质量的宪法，本不宜改来改去，无奈这是大转型时段过渡政体下的一部临时宪法，只好频繁修订。但愿转型落地之前，这是最后一次修宪。<br>第八，平反“六四”。今明两年，适值“改开”四十周年、“五四”百年与“六四”三十周年，一连串所谓敏感节点纷沓。而中美贸易战的后果，亦将延时第次显现，增加了所谓的不确定性。在此，既有的“维稳”思路是“以治安对付政治”，叠加上“用政制钳制政治”，而非“以政治迎应政治”这一常态政治之道。当年给“四五”平反，从此每年四月五号不再成为敏感节点，就在于“以政治迎应政治”，兵来将挡水来土掩，结果各得其所，皆大欢喜。因此，值此迎来“六四”爆发三十周年之际，当局于今明两年适当时刻公开为其平反，不仅表明“以政治迎应政治”的诚意与智慧，而且，从此每年六月四号无需再如临大敌，为全体公民政治上的和平共处扫清障碍，既裨益于民心舒畅，更有助于收拾政治合法性。<br>以上诸项，均为现代政治的一般常识，也是刻下国人的普遍诉求。此番“冒着杀头的危险说出人所共知的道理”，就在于举世滔滔，若无此说法，就无此立法，从而吾侪百姓没个活法，其奈也何，呜呼哀哉！</p><p>##四、过渡时段<br>两年多来的世界进入政治调整小周期，无需惊恐，远未到分晓时分，更须也唯有稳健推行内政改革，健全国族身心，方能应对过关，维持包括中国在内的这艘世界大船持续扬帆于和平与发展的常态政治航道。冲突与战争是人类这个残忍物种的常态，但是身处历史机遇关头而推延或者避免其发生，则为政治的天命所在，更是对于肉食者政治智慧与德性的大考，而人类恰恰就是政治的动物，政治为世间最高智慧。就刻下情形而言，纵便事态已如今日，也还未能根本偏转“和平与发展”这一大势。而这就是历史机遇，就是所谓的“机遇期”，唯智者方能攫获，而不至于东怼西怼，将一手好牌打成烂牌也。<br>至于太平洋沿岸东西两大国均不期然间先后步入“老红卫兵执政”状态，是而且不过是一种短暂的过渡现象，实为每临历史危机关头就会出现的那种一再上演的乱象之再现而已。就此岸言，其毫无历史感与现代政治意识，更无基于普世文明自觉的道义担当，昧于时势大道，却又深濡文革政治烙印，虚骄之下，允为干才而用力过猛却用错了方向，致使弄权有术，当官有方，而治国无道，岂止折腾，直是倒行逆施。就彼岸看，实为一群依旧生活在列强时代与冷战政治中的老不死幽灵登台，虽不乏对于当今世界政治图景与文明变局的现实判断，却同样缺乏历史感，短视而贪婪，根本开出了误诊处方，反将早年裙带资本权贵的重商主义国策与基于唯我独尊、掠夺成性的帝国主义式傲慢偏见与粗鄙蛮横，赤裸裸的讹诈，尽兴抖露无遗，展示了一个文明衰败的疲惫帝国狗急跳墙式的晚期症状。而自大爱国狂适成祸国害人精，所谓爱国贼，中外古今，史不鲜见。同时，它还说明，如同“坏人变老了”一般，人人都是自己早年教育体系的产物，此后无所用心，了无自省，便难以挣脱羁绊。以旧知识应对新事物，却又自信爆棚，遂刚愎自用。其理念，其政策，如托克维尔所言，不过是“发霉的旧货”。<br>此时此刻，就中文世界的一般舆议心态与脉络来看，基于公民理性的政治自觉已然充沛发育，更不缺昂扬正大的道义立场，但少见基于国家理性意识的文明自觉，特别是未能梳理清楚适用于“国家间政治”的国家理性与适用于“国家政治”的公民理性之二元分际，而混战一团，指东打西，甚至崇拜起彼岸老红卫兵来，将自己降格到铁锈州红脖子们的水准，套用一句名人名言，可谓“土样土尿泡”。同时，也是政体感召不足，导致认同缺失或者疲弱，而使国民身份与公民认同两相悖逆之怪象。毕竟，“大清”与“中华”，虽纠结缠绕，还就真的不是一回事。你们“坐江山”“吃江山”，江山有事了，就让大家“共克时艰”来“保江山”，这不扯淡吗！有舆议感慨，一些人说话办事，仿佛自己不是中国人，而处处倒为对方设计着想，实在是怪而不怪，正为向心力凝聚力这一软实力不足国族常见的景象矣。再者，撇开究竟何为“中国人”等等认知争议，置此情形下，可得申言者，两边各说各话，越是昂扬正大，越可能将话谈死，而无转圜余地。凡此再度说明，国族的政治成熟必以其知识精英的心智作育为先导，而心智作育要在精神自由，众口喧哗却又紧扣人生与人心的普世心思，摒拒任何定于一尊的愚妄与傲慢，要求当局不要再钳口日甚，而把言论自由还给读书人——毕竟，“子产不毁乡校”——从而，在几代人的接续用功磨砺中，涵养保育中华文明思想母机，护卫其功用，强化其势能，这才有望清醒观势，冷静应事，而清明用世矣。<br>目前来看，当局一再重申绝不会因为贸易战而改变“改革开放”的基本国策，也不会动摇在开放交往中发展经济的既有路线，并决心协力捍卫多边体制。与此表态相呼应，并有相应开放措施出台，仿佛尚有定力。其于证明“开放倒逼改革”这一中国式发展路径依赖的同时，却又似乎未见任何实质性内政改革，雷声大雨点小，则不免令人失望，而对其诚意和实效，采取游移观望态度。故而，上述八项，允为时务，先做起来再说。<br>都说你能干肯干，这八项你只要干一件，我们就欢喜。你要是干三、四件，我们就心服口服。你要是全干了，则普天同庆。<br>年初高官曾经宣示今年还要陆续放大招，以回应“改革开放”四十周年，此刻时间过半，宁信其有，且翘首以待矣。<br>最后，顺说一句，陕西省梁家河村四五十户人家，常驻百十来口，居然在上海设立联络处和农副产品展示馆，一望可知非淳朴乡民所能为，毋宁，官商勾结的媚上双簧，于各怀襟抱中各逞其图。还有，最高检开设“12309检察服务中心”，层峰邀约与此八竿子打不到一块儿的梁家河村支书共同揭牌，同属太监姿态，希图借此创造勾兑机会，拍马屁不要脸。至于陕西省社科联的招标项目“梁家河大学问”，以及近年来各类所谓社科项目之造神运动与领袖崇拜，反现代，逆潮流，匪夷所思，恬不知耻，丢人现眼，更不论矣！凡此种种，太作了，太过分了，而过犹不及，只会把我们带回那个人人觳觫苟存的酷烈人世也！<br>话说完了，生死由命，而兴亡在天矣。<br>2018年7月<br>（作者为清华大学法学院教授）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要:&lt;br&gt;清华大学许章润教授敢在国内公开批评时政，真国家栋梁也。&lt;br&gt;
    
    </summary>
    
      <category term="Uncategorized" scheme="http://blog.ligene.cn/categories/Uncategorized/"/>
    
    
      <category term="时事" scheme="http://blog.ligene.cn/tags/%E6%97%B6%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>Windows下连接远程Linux桌面</title>
    <link href="http://blog.ligene.cn/2018/01/25/Xming-PuTTY/"/>
    <id>http://blog.ligene.cn/2018/01/25/Xming-PuTTY/</id>
    <published>2018-01-25T00:45:16.000Z</published>
    <updated>2018-06-27T21:58:04.693Z</updated>
    
    <content type="html"><![CDATA[<p>一般我们是通过命令行界面来使用Linux服务器，但有时也需要用Linux图形界面的软件，如IGV。当需要显示的基因组信息比较大，如测序reads的基因组比对情况，会占用大量内存，在服务器上运行会比较流畅。下面是本地windows电脑显示远程Linux服务器桌面的方法。<br><a id="more"></a></p><h2 id="1-Windows安装Xming"><a href="#1-Windows安装Xming" class="headerlink" title="1. Windows安装Xming"></a>1. Windows安装Xming</h2><p>从SourceForge下载Xming-setup.exe（最新的版本是6.9.0.31）。<br>Xming的SourceForge网址： <a href="http://sourceforge.net/projects/xming/" target="_blank" rel="noopener">http://sourceforge.net/projects/xming/</a><br>本地安装，安装过程一切按默认选项。<br>第一次运行时，找到开始菜单里面的XLaunch来启动，产生一个初始的配置文件。对于简单的使用来说，不需要任何特殊的配置，使用默认即可。<br>下图中选择“one window”，设置“Display number”中的数字为0。<br><img src="/downloads/Xming.png" alt="Xming Setup"><br>  启动完成后，在任务栏右边会出现一个“X”形状的图标，这表示Xming已经在运行了，将鼠标悬停上去，能看到当前使用的“Display number”使用默认的0.0。</p><h2 id="2-Linux服务器配置"><a href="#2-Linux服务器配置" class="headerlink" title="2. Linux服务器配置"></a>2. Linux服务器配置</h2><p> 修改ssh服务的配置文件：<br><code>$vi /etc/ssh/sshd_config</code><br>取消下面一行的注释，如果没有这一行则手动添加：<br>X11Forwrding yes<br>这样配置的作用就是允许SSH的X转发。</p><h2 id="3-PuTTY设置"><a href="#3-PuTTY设置" class="headerlink" title="3. PuTTY设置"></a>3. PuTTY设置</h2><p>SSH客户端使用PuTTY，PuTTY是freeware+greenware。<br>PuTTY下载网址：<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a><br>配置 Session：配置linux服务器IP，连接方式为SSH<br>Connection &gt; Data：保存连接使用的用户名<br>Connection &gt; SSH &gt; X11：Enable X11 Forwarding，X display Location 为 “localhost:0”，这里的 0 就是配置 Xming X server 时指定的 Display Number。<br>保存设置：选Session，Saved sessions输入一个名称，并按右边Save按钮。每次更改PuTTY设置都需要这样保存，下次Load这个Session才是同样的设置。<br><img src="/downloads/putty.png" alt="putty Setup"><br> 至此配置完成。<br>在windows上使用PuTTY连接到Linux服务器，输入xclock &amp;，可以看到X server工作效果了，显示一个时钟图形界面。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般我们是通过命令行界面来使用Linux服务器，但有时也需要用Linux图形界面的软件，如IGV。当需要显示的基因组信息比较大，如测序reads的基因组比对情况，会占用大量内存，在服务器上运行会比较流畅。下面是本地windows电脑显示远程Linux服务器桌面的方法。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.ligene.cn/categories/Linux/"/>
    
    
      <category term="Xming" scheme="http://blog.ligene.cn/tags/Xming/"/>
    
      <category term="PuTTY" scheme="http://blog.ligene.cn/tags/PuTTY/"/>
    
  </entry>
  
  <entry>
    <title>编程语言之C语言</title>
    <link href="http://blog.ligene.cn/2018/01/05/clang/"/>
    <id>http://blog.ligene.cn/2018/01/05/clang/</id>
    <published>2018-01-05T00:25:23.000Z</published>
    <updated>2018-06-27T21:58:48.288Z</updated>
    
    <content type="html"><![CDATA[<p>C语言是一门通用的计算机编程语言，广泛应用于系统与应用软件的开发。它是由Dennis Ritchie与Ken Thompson于1969年至1973年间，为了移植与开发UNIX操作系统，在贝尔实验室设计与开发。C语言具有高效、灵活、功能丰富、表达力强和可移植性好等特点。C语言的设计影响了众多后来的编程语言，例如C++、Objective-C、Java、C#等。<br><a id="more"></a><br>C语言后来发展出多种版本，如Microsoft C、Turbo C等。为了避免各开发商的C语言语法产生差异，美国国家标准研究所(ANSI)为C语言制定了一套国际标准语法，简称为ANSI C。二十世纪八十年代至今的相关程序开发工具，一般都支持匹配ANSI C的语法。目前，C语言编译器普遍存在于各种不同的操作系统中，例如Microsoft Windows, Mac OS X, Linux等。Windows系统下常用的C语言编译器有Microsoft Visual C/C++；Linux系统下常用的编译器是GCC(GNU C编译器)等。<br>由于Linux系统也是由C语言开发，其上运行的许多应用软件都由C语言开发，所以我们要对C语言编程有一点了解，才能做好数据分析所需软件的安装工作。<strong>一般Linux开源软件的开发者会提供C语言编写的源代码，如果有些软件安装出问题，可以通过阅读源代码来解决。</strong></p><p>###C语言程序开发<br>C语言是编译性的高级语言，运行之前需要用编译工具将源代码编译链接成目标文件和可执行文件。C语言编程过程大致可分为四步：编写程序 -&gt; 编译 -&gt; 链接 -&gt; 运行。</p><ul><li><p>(1) 编写源代码<br>一个 C 语言程序源代码，可以是 3 行，也可以是数百万行。它可以写在一个或多个扩展名为 “.c” 的文本文件中，例如hello.c。您可以使用文本编辑器notepad、vim等来编写C语言程序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;Hello World!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>(2) 用编译工具编译，并链接生成可执行文件<br><code>$gcc -o helloworld hello.c</code><br>//编译并链接生成可执行文件helloworld</p><blockquote><p>如果c程序有多个源代码文件，可能先分别编译成相应的中间目标文件，最后将所有中间文件链接成一个可执行文件。这样其中一个源文件改动后，不用所有文件都要重新编译。Linux提供自动维护工具make，运行make可以从makefile中读取模块之间的关系，自动维护与更新程序的修改。<br><code>$gcc -c hello.c</code><br>//只编译生成中间文件hello.o</p></blockquote></li><li><p>(3) 运行helloworld可执行文件<br><code>$./helloworld</code><br>//输出”Hello World!”。</p></li></ul><p><img src="/downloads/cprogramming.png" alt="C programming"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;C语言是一门通用的计算机编程语言，广泛应用于系统与应用软件的开发。它是由Dennis Ritchie与Ken Thompson于1969年至1973年间，为了移植与开发UNIX操作系统，在贝尔实验室设计与开发。C语言具有高效、灵活、功能丰富、表达力强和可移植性好等特点。C语言的设计影响了众多后来的编程语言，例如C++、Objective-C、Java、C#等。&lt;br&gt;
    
    </summary>
    
      <category term="Programming" scheme="http://blog.ligene.cn/categories/Programming/"/>
    
    
      <category term="C" scheme="http://blog.ligene.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.ligene.cn/2018/01/01/hello-world/"/>
    <id>http://blog.ligene.cn/2018/01/01/hello-world/</id>
    <published>2018-01-01T01:31:37.000Z</published>
    <updated>2018-08-02T04:02:15.350Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /mnt/c/hexoBlog</span><br><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br><span class="line">$ hexo g -d<span class="comment">#generate &amp; deploy</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="Uncategorized" scheme="http://blog.ligene.cn/categories/Uncategorized/"/>
    
    
      <category term="Hexo" scheme="http://blog.ligene.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>文献检索</title>
    <link href="http://blog.ligene.cn/2017/10/13/references/"/>
    <id>http://blog.ligene.cn/2017/10/13/references/</id>
    <published>2017-10-13T08:40:46.000Z</published>
    <updated>2017-10-13T07:45:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>科研似乎是比较高大上的词，但英文“research”更能表达它的意思，就是反复(re)搜索(search)文献。大牛牛顿都说他的成功是站在巨人的肩膀上(Stand on the shoulders of giants)。从事科研都要先查文献，看看别人做了什么或先学习怎么做，运气好的，如获诺奖的菁蒿素就是屠youyou从我国传统医学文化宝库的古籍堆里找到的秘方，才被提取用于疟疾的治疗。<br><a id="more"></a></p><h2 id="一、外文文献"><a href="#一、外文文献" class="headerlink" title="一、外文文献"></a>一、外文文献</h2><h3 id="1-Google-Scholar-scholar-google-com"><a href="#1-Google-Scholar-scholar-google-com" class="headerlink" title="1. Google Scholar (scholar.google.com)"></a>1. Google Scholar (scholar.google.com)</h3><p>Google Scholar是学术文献的免费搜索工具，可查找到各种学术文献，包括期刊论文、学位论文、书籍、预印本、文摘和技术报告等。曾经它是我最喜欢用的文献检索工具，方便、准确，能找到最新刚online的文献，也可以找到非常古老的资料。但现在国内被封了，哎，就此略去。</p><h3 id="2-NCBI-PubMed-www-ncbi-nlm-nih-gov-pubmed"><a href="#2-NCBI-PubMed-www-ncbi-nlm-nih-gov-pubmed" class="headerlink" title="2. NCBI PubMed (www.ncbi.nlm.nih.gov/pubmed)"></a>2. NCBI PubMed (www.ncbi.nlm.nih.gov/pubmed)</h3><p>PubMed是美国生物技术信息中心(NCBI)维护的文献数据库。PubMed收录来自全世界发行的超过5000多种生物医学杂志的文献摘要，最早可以追溯到1950s.<br>PubMed的文献检索很简单，打开NCBI首页，在检索框左边的下拉栏中找到PubMed，然后在检索框中输入你要搜索的关键词，如搜索“HBB”，就可以看到所有hemoglobin蛋白相关的文献。<br>但一般会出现很多文献，下面简要介绍一下pubmed文献检索的条件限制方法：</p><ul><li>使用限定词(fields)查询:<br>如只看Nature杂志的文章可以在关键词后再输入”Nature[journal]”, 同理如果你对只对关键词中含有酵母菌的文章感兴趣，可以试试”Yeast[keyword]”。<br>其它一些常用的限定词简写：<blockquote><p>TIAB: 表示Title/Abstract，搜索题目或摘要中出现的文章<br>AU: 表示作者，按作者搜索文章<br>TA: 表示杂志，按杂志搜索文章<br>DP: 表示出版日期<br>AD: 表示Affiliation(工作单位)</p></blockquote></li></ul><p>更多的限定词可以查看网址：<a href="https://www.ncbi.nlm.nih.gov/books/NBK3827/#_pubmedhelp_Search_Field_Descriptions_and_" target="_blank" rel="noopener">https://www.ncbi.nlm.nih.gov/books/NBK3827/#_pubmedhelp_Search_Field_Descriptions_and_</a></p><ul><li>使用过滤(filters)选项查询:<br>检索结果页面左边还可以限制条件，比如只要看可以全文免费下载的文献，在左边的限制选项(Text availability)中点击”free all text”；如只要看综述文献，就在左边Article types下面选择”Review”，即只看综述类型的文献。<blockquote><p>一般新手需要通过看综述来快速了解某个领域的研究现状。</p></blockquote></li><li>使用布尔(boolean) 运算符查询 (大写AND, OR, NOT)<br>如果蛋白或基因有多个别名或曾用名，比如P53，就可以写成“P53 OR TRP53 OR TP53”，这样搜索结果的完整性可大大提高。更多的检索条件可以通过逻辑运算符构建表达式，如“P53 AND Cancer AND (Science[TA] OR Nature[TA])”，这个表达式的意思是搜索发表在Science和Nature上的带有P53和Cancer关键字的文献。</li></ul><h2 id="二、中文文献"><a href="#二、中文文献" class="headerlink" title="二、中文文献"></a>二、中文文献</h2><p>中文文献检索建议使用中国知网CNKI(www.cnki.net)。目前CNKI网络数据库是国内最大的，使用最广泛的中文文献数据库，其中有大量的期刊、学位论文等，基本覆盖你想找的中文文献。在校学生检索文献，一般可以在学校图书馆网站使用CNKI数据库，查找并下载文献全文。<br>最后推荐一下CNKI的专业英文翻译工具：<strong>翻译助手</strong>(<a href="http://dict.cnki.net/)。" target="_blank" rel="noopener">http://dict.cnki.net/)。</a><br>CNKI上的词汇均出于学术期刊，大多可以追溯到文献原文，可以帮助搜索一些专业术语。但要注意，由于例句来至国内期刊的英文摘要，要警惕某些Chinglish的表达方式。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;科研似乎是比较高大上的词，但英文“research”更能表达它的意思，就是反复(re)搜索(search)文献。大牛牛顿都说他的成功是站在巨人的肩膀上(Stand on the shoulders of giants)。从事科研都要先查文献，看看别人做了什么或先学习怎么做，运气好的，如获诺奖的菁蒿素就是屠youyou从我国传统医学文化宝库的古籍堆里找到的秘方，才被提取用于疟疾的治疗。&lt;br&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://blog.ligene.cn/categories/Bioinformatics/"/>
    
    
      <category term="PubMed" scheme="http://blog.ligene.cn/tags/PubMed/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04LTS安装QIIME</title>
    <link href="http://blog.ligene.cn/2017/09/03/qiime-install/"/>
    <id>http://blog.ligene.cn/2017/09/03/qiime-install/</id>
    <published>2017-09-03T06:55:56.000Z</published>
    <updated>2018-06-27T21:56:36.432Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04LTS安装QIIME</p><ol><li><p>构建Ubuntu环境<br>Linux已内置python且version&gt;2.7，需安装其余必备软件包，版本验证 python –version。<br>$sudo apt-get install build-essential python-dev python-pip</p><a id="more"></a></li><li><p>安装QIIME(base install)<br>使用阿里云镜像安装pip软件包，可大幅提高下载速度，只需在命令后加：<br>-i <a href="http://mirrors.aliyun.com/pypi/simple" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple</a> –trusted-host mirrors.aliyun.com<br>$sudo pip install numpy==1.10.0<br>$sudo pip install ipython==5.4.1<br>$sudo pip install qiime  -i <a href="http://mirrors.aliyun.com/pypi/simple" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple</a> –trusted-host mirrors.aliyun.com<br>等待安装完成。<br>安装时，如提示升级pip：<br>$sudo pip install –upgrade pip -i <a href="http://mirrors.aliyun.com/pypi/simple" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple</a> –trusted-host mirrors.aliyun.com</p></li><li>检测安装问题<br>安装完成后：<br>$print_qiime_config.py -t<br>有提示错误，按提示再安装：<br>$sudo apt-get install python-tk<br>后显示正常了。</li><li>安装R<br>$sudo apt-get install r-base r-base-dev<br>$sudo R<blockquote><p>install.packages(‘vegan’)<br>install.packages(‘RColorBrewer’)<br>install.packages(‘ape’)<br>source(“<a href="http://bioconductor.org/biocLite.R" target="_blank" rel="noopener">http://bioconductor.org/biocLite.R</a>“)<br>biocLite(“metagenomeSeq”)<br>其它第三方软件还有待安装。。。</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 16.04LTS安装QIIME&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;构建Ubuntu环境&lt;br&gt;Linux已内置python且version&amp;gt;2.7，需安装其余必备软件包，版本验证 python –version。&lt;br&gt;$sudo apt-get install build-essential python-dev python-pip&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.ligene.cn/categories/Linux/"/>
    
    
      <category term="qiime" scheme="http://blog.ligene.cn/tags/qiime/"/>
    
  </entry>
  
  <entry>
    <title>数据分析的多重检验问题(multiple testing)</title>
    <link href="http://blog.ligene.cn/2017/08/26/multiple-testing/"/>
    <id>http://blog.ligene.cn/2017/08/26/multiple-testing/</id>
    <published>2017-08-26T01:31:37.000Z</published>
    <updated>2018-01-05T00:22:42.772Z</updated>
    
    <content type="html"><![CDATA[<p>数据分析中常碰见多重检验(multiple testing)问题，如利用基因芯片数据比较分析两个样品间是否有差异表达基因，或利用质谱定量数据鉴定某一个蛋白在两个样品中是否存在差异表达等。<br>一般选取差异表达基因有两标准：<br>(1) Fold Change，即两个样品中同一个基因的表达水平变化倍数;<br>(2) p-value，即通过T检验等统计学方法计算每个基因的P值。<br><a id="more"></a><br>但是由于通常样本量较少，从而对总体方差的估计不很准确，所以T检验的检验效能会降低，并且如果多次使用T检验会显著增加假阳性的次数。例如，当某个基因的p值小于0.05（5%）时，我们通常认为这个基因在两个样本中的表达是有差异的。但是仍旧有5%的概率，这个基因并不是差异表达基因，我们错误地否认了原假设（在两个样本中没有差异表达），导致了假阳性的产生（犯错的概率为5%）。<br>如果检验一次，犯错的概率是5%；检测10000次，犯错的次数就是500次，即额外多出了500个差异基因的结论（即使实际没有差异）。为了控制假阳性的次数，于是我们需要对p值进行多重检验校正，提高阈值。</p><h3 id="FDR方法"><a href="#FDR方法" class="headerlink" title="FDR方法"></a>FDR方法</h3><p>Benjamini于1995年提出一种方法，通过控制FDR(False Discovery Rate)来决定P值的域值。假设你挑选了R个差异表达的基因，其中有S个是真正有差异表达的，另外有V个其实是没有差异表达的，是假阳性的。实践中希望错误比例Q＝V/R平均而言不能超过某个预先设定的值（比如0.05），在统计学上，这也就等价于控制FDR不能超过5％.<br>根据Benjamini在他的文章中所证明的定理，控制FDR的步骤实际上非常简单。<br>设总共有m个候选基因，每个基因对应的p值从小到大排列分别是p(1),p(2),…,p(m),则若想控制FDR不能超过q，则只需找到最大的正整数i，使得 p(i)&lt;= (i*q)/m。然后，挑选对应p(1),p(2),…,p(i)的基因做为差异表达基因，这样就能从统计学上保证FDR不超过q。这是Benjamini and Hochber法(BH法)从P值估计FDR的基本原理。</p><h3 id="FDR计算"><a href="#FDR计算" class="headerlink" title="FDR计算"></a>FDR计算</h3><p>FDR的计算方法除了可以使用excel的BH计算方法外，对于较大的数据，我们推荐使用R命令p.adjust。<br><img src="/downloads/fdr_padjust.png" alt="p.adjust"><br>该函数的运算需要先将一系列p值、设定一个校正方法（p.adjust.methods）及所有p值的个数（length(p)）输入到p.adjust函数中。返回结果为校正后的P值，可以用于后续分析了。</p><h3 id="FDR与p-value区别"><a href="#FDR与p-value区别" class="headerlink" title="FDR与p-value区别"></a>FDR与p-value区别</h3><p>The False Discovery Rate (FDR) of a set of predictions is the expected percent of false predictions in the set of predictions . For example if the algorithm returns 100 genes with a false discovery rate of .3 then we should expect 70 of them to be correct. FDR的意义为错误拒绝（即拒绝真的原假设）的个数占所有被拒绝的原假设个数的比例的期望值！<br>The FDR is very different from a p-value, and as such a much higher FDR can be tolerated than with a p-value. In the example above a set of 100 predictions of which 70 are correct might be very useful, especially if there are thousands of genes on the array most of which are not differentially expressed. In contrast p-value of .3 is generally unacceptabe in any circumstance. Meanwhile an FDR of as high as .5 or even higher might be quite meaningful.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;数据分析中常碰见多重检验(multiple testing)问题，如利用基因芯片数据比较分析两个样品间是否有差异表达基因，或利用质谱定量数据鉴定某一个蛋白在两个样品中是否存在差异表达等。&lt;br&gt;一般选取差异表达基因有两标准：&lt;br&gt;(1) Fold Change，即两个样品中同一个基因的表达水平变化倍数;&lt;br&gt;(2) p-value，即通过T检验等统计学方法计算每个基因的P值。&lt;br&gt;
    
    </summary>
    
      <category term="Statistics" scheme="http://blog.ligene.cn/categories/Statistics/"/>
    
    
      <category term="FDR" scheme="http://blog.ligene.cn/tags/FDR/"/>
    
  </entry>
  
  <entry>
    <title>Javascript-based bioinformatics</title>
    <link href="http://blog.ligene.cn/2017/08/26/binfo-JS/"/>
    <id>http://blog.ligene.cn/2017/08/26/binfo-JS/</id>
    <published>2017-08-26T01:17:43.000Z</published>
    <updated>2017-08-26T00:40:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>A guru of biostar.org predict the future of bioinformatics will need Javascript programming.<br><a id="more"></a></p><blockquote><p>the move into a “cloud” based environments like amazon EC2/app-engine and a more simplified operating systems such as chromeOS and android/iOS, will completely change the way people think about programming. So I predict that bioinformatics in the future will be carried out on a cluster of thousands of computers in the cloud, bundled together on the internet. The bioinformatic programming will be based mainly on using web-services and web-applications. These new concept will make a javascript-based bioinformatics very useful.<br>I know that it is sound crazy now, but in 2-3 years I predict that most people will want to perform their bioinfo analysis with their iPhone/iPad/netbook computers, doing a data-intensive tasks online, without buying expensive hardware.</p></blockquote><p>I am dreaming on developing such an environment, and will work on it soon - an app-engine/jquery based bioinformatics platorm.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A guru of biostar.org predict the future of bioinformatics will need Javascript programming.&lt;br&gt;
    
    </summary>
    
      <category term="Programming" scheme="http://blog.ligene.cn/categories/Programming/"/>
    
    
      <category term="Javascript" scheme="http://blog.ligene.cn/tags/Javascript/"/>
    
  </entry>
  
  <entry>
    <title>Microbiome visualization</title>
    <link href="http://blog.ligene.cn/2017/07/20/Microbiome-visualization/"/>
    <id>http://blog.ligene.cn/2017/07/20/Microbiome-visualization/</id>
    <published>2017-07-20T09:15:05.000Z</published>
    <updated>2017-09-03T06:06:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间让朋友帮我做了一个微生物组小项目的网页(Saliva microbiome visualization)，像是一个入口，通往生物科技的远方。<br>特纪念一下。<br><a id="more"></a><br><img src="/downloads/microbiome_vis.jpg" alt="Saliva microbiome visualization"><br>我07年在芝加哥大学学习的时候，开始做酵母基因组的研究。这10年时间,几乎靠一人之力做黄酒酵母基因组，还好得到了两个国家基金的资助，勉强算做成(完)了:(‘。从17年开始，我打算做微生物与健康相关方面的研究，期望后面10年能有一点小成就。::O:</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间让朋友帮我做了一个微生物组小项目的网页(Saliva microbiome visualization)，像是一个入口，通往生物科技的远方。&lt;br&gt;特纪念一下。&lt;br&gt;
    
    </summary>
    
      <category term="Genomics" scheme="http://blog.ligene.cn/categories/Genomics/"/>
    
    
      <category term="Web" scheme="http://blog.ligene.cn/tags/Web/"/>
    
      <category term="Microbiome" scheme="http://blog.ligene.cn/tags/Microbiome/"/>
    
  </entry>
  
  <entry>
    <title>Mapping contigs onto reference genome</title>
    <link href="http://blog.ligene.cn/2017/07/13/mapping-contigs/"/>
    <id>http://blog.ligene.cn/2017/07/13/mapping-contigs/</id>
    <published>2017-07-13T00:40:17.000Z</published>
    <updated>2017-09-03T06:01:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>基因组组装会得到许多contigs，一般需要将它们比对到参考基因组序列，以确定contigs在染色体的位置。<br>参考基因组可以用亲缘关系很近的物种序列，例如同一个物种的不同菌株测序，可以用该种模式菌株的基因组序列作为reference sequence。<br><a id="more"></a></p><h2 id="1-Mapping-contigs-onto-reference-genome"><a href="#1-Mapping-contigs-onto-reference-genome" class="headerlink" title="1. Mapping contigs onto reference genome"></a>1. Mapping contigs onto reference genome</h2><h3 id="1-1-Make-the-BLAST-database-with-the-reference-genome"><a href="#1-1-Make-the-BLAST-database-with-the-reference-genome" class="headerlink" title="1.1 Make the BLAST database with the reference genome"></a>1.1 Make the BLAST database with the reference genome</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$makeblastdb -in reference.fasta -dbtype nucl -parse_seqids -out ref_db</span><br><span class="line">$blastdbcmd -db ref_db -info</span><br></pre></td></tr></table></figure><h3 id="1-2-Run-the-BLAST-query-with-contigs"><a href="#1-2-Run-the-BLAST-query-with-contigs" class="headerlink" title="1.2 Run the BLAST query with contigs"></a>1.2 Run the BLAST query with contigs</h3><p>$ blastn -task blastn -query contigs.fasta -db ref_db -parse_deflines  -evalue 0.0001 -outfmt 6 -out blast.tab </p><h3 id="1-3-Convert-BLAST-tabular-format-into-BED-format"><a href="#1-3-Convert-BLAST-tabular-format-into-BED-format" class="headerlink" title="1.3 Convert BLAST tabular format into BED format"></a>1.3 Convert BLAST tabular format into BED format</h3><p>BED format is a format that IGV can accept. You need to have a few column in this file format:</p><blockquote><p>“chrom start end name score, ….”<br>These fields are already present in the BLAST tabular format result:<br>‘qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore’<br>To convert to BED format, assuming query is your contigs and subject is the reference:<br>“subjectID, subjectStart - 1,  subjectEnd, queryID:queryStart-queryEnd”<br>Note: </p><ol><li>you might need to swap subjectStart and subjectEnd, depending on which one is larger.</li><li>use tab instead of comma in the final BED file.</li></ol></blockquote><h3 id="1-4-Visualization-with-IGV"><a href="#1-4-Visualization-with-IGV" class="headerlink" title="1.4 Visualization with IGV"></a>1.4 Visualization with IGV</h3><p>The final BED file can be visualized with IGV.</p><hr><h2 id="2-最新版BLAST-支持直接用IGV显示"><a href="#2-最新版BLAST-支持直接用IGV显示" class="headerlink" title="2. 最新版BLAST+支持直接用IGV显示"></a>2. 最新版BLAST+支持直接用IGV显示</h2><ul><li><p>最新版blastn支持SAM output format：<strong>-outfmt 17</strong><br>参见：NCBI working on SAM output from BLAST+ (<a href="https://blastedbio.blogspot.com/2015/07/ncbi-working-on-sam-output-from-blast.html" target="_blank" rel="noopener">https://blastedbio.blogspot.com/2015/07/ncbi-working-on-sam-output-from-blast.html</a>)</p></li><li><p>但输出SAM格式还有一个问题，Query name不能被输出到sam文件对应的序列。<br>可以通过 -parse_deflines来解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$makeblastdb -dbtype nucl -in contigseq.fasta -parse_seqids -out testdb</span><br><span class="line">$blastn -query genomeseq.fasta -parse_deflines -db testdb -evalue 0.0001 -outfmt 17 -out test.sam</span><br></pre></td></tr></table></figure></li></ul><p>注意：这里<strong>query是reference序列文件，而subject是contigs序列</strong>， 所以需要用contigs序列建库，与前面tabular format的过程相反。</p><ul><li>输出文件test.sam可直接导入IGV中观察两基因组的比对情况。<br>  IGV需要以这里的genomeseq.fasta做为reference genome (Genomes-&gt;Create .genome file…).</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基因组组装会得到许多contigs，一般需要将它们比对到参考基因组序列，以确定contigs在染色体的位置。&lt;br&gt;参考基因组可以用亲缘关系很近的物种序列，例如同一个物种的不同菌株测序，可以用该种模式菌株的基因组序列作为reference sequence。&lt;br&gt;
    
    </summary>
    
      <category term="Genomics" scheme="http://blog.ligene.cn/categories/Genomics/"/>
    
    
      <category term="BLAST" scheme="http://blog.ligene.cn/tags/BLAST/"/>
    
      <category term="IGV" scheme="http://blog.ligene.cn/tags/IGV/"/>
    
  </entry>
  
  <entry>
    <title>BLAST+使用教程</title>
    <link href="http://blog.ligene.cn/2017/07/05/BLAST-Tutorial/"/>
    <id>http://blog.ligene.cn/2017/07/05/BLAST-Tutorial/</id>
    <published>2017-07-05T05:39:37.000Z</published>
    <updated>2017-07-12T23:49:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux下最新版BLAST+的本地化安装与基本使用用法。<br>BLAST的更详细使用方法可参考BLAST手册《BLAST Command Line Applications User Manual》，网址：<a href="http://www.ncbi.nlm.nih.gov/books/NBK279690/" target="_blank" rel="noopener">http://www.ncbi.nlm.nih.gov/books/NBK279690/</a><br><a id="more"></a></p><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h2><p>从NCBI网址下载最新版BLAST程序：ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/<br>根据自己的操作系统选择相应的BLAST可执行程序，如Ubuntu 12.04(64位)系统就下载：<br>$wget ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/ncbi-blast-2.6.0+-x64-linux.tar.gz</p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h2><ul><li>解压缩：<br>$tar -zxvf ncbi-blast-2.6.0+-x64-linux.tar.gz</li><li>移动到本地安装目录（不带版本号，避免因升级而修改配置文件）<br>$sudo mv ncbi-blast-2.6.0+/  /opt/blast</li><li>将BLAST+可执行程序所在目录（bin）的绝对路径加入到环境变量$PATH中，方便通过程序名直接调用。<br>编辑~/.bashrc文件，在最后加入bin目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;export PATH=/opt/blast/bin:\$PATH&quot; &gt;&gt; ~/.bashrc    </span><br><span class="line">source ~/.bashrc  #让配置生效</span><br><span class="line">blastn -version  #显示版本</span><br></pre></td></tr></table></figure></li></ul><p>如果显示版本正确，安装成功。</p><h2 id="3-配置本地BLAST库"><a href="#3-配置本地BLAST库" class="headerlink" title="3.配置本地BLAST库"></a>3.配置本地BLAST库</h2><ul><li><p>安装目录/opt/blast下新建一个文件夹，命名为db 。<br>$mkdir /opt/blast/blastdb</p></li><li><p>在用户home目录下新建一个文件.ncbirc（文件名是以点号开头）。<br>$vi ~/.ncbirc<br>在文件中添加内容：<br>[BLAST]<br>BLASTDB=/opt/blast/blastdb</p></li></ul><p>配置好后，以后做BLAST选择库的时候就可以只输入名称（比如nr），不用输入绝对路径了。</p><h2 id="4-基本用法"><a href="#4-基本用法" class="headerlink" title="4.基本用法"></a>4.基本用法</h2><p>BLAST程序执行前要先准备查找目标序列(Subject)的数据库，BLAST程序需要有特定格式数据库才能进行搜索，所以要先格式化序列数据库；也可以直接从NCBI下载已经格式化好的数据库，如NT, NR数据库等。然后根据查询序列(Query)为蛋白质或核酸序列选择相应BLAST程序，如blastp或blastn等搜索相似序列。</p><h3 id="4-1-格式化序列数据库"><a href="#4-1-格式化序列数据库" class="headerlink" title="4.1 格式化序列数据库"></a>4.1 格式化序列数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$makeblastdb -in db.fasta -dbtype nucl -parse_seqids -out dbname</span><br><span class="line">参数说明:</span><br><span class="line">-in：待格式化的序列文件</span><br><span class="line">-dbtype：数据库类型，prot或nucl</span><br><span class="line">-out：数据库名</span><br></pre></td></tr></table></figure><p>如果该库需要经常使用，可将库文件移到前面配置的库文件的目录，今后在其它目录运行blast的时候，便可直接输入库名（不用输入绝对路径），直接使用。<br>$mv dbname.* /opt/blast/blastdb</p><h3 id="4-2-运行BLAST程序"><a href="#4-2-运行BLAST程序" class="headerlink" title="4.2 运行BLAST程序"></a>4.2 运行BLAST程序</h3><ul><li>以核酸序列比对核酸数据库（blastn）为例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$blastn -query seq.fasta -out seq.blast -db dbname -outfmt 6 -evalue 1e-5 -num_descriptions 10 -num_threads 8</span><br><span class="line">参数说明:</span><br><span class="line">-query： 输入文件路径及文件名</span><br><span class="line">-out：输出文件路径及文件名</span><br><span class="line">-db：格式化了的数据库路径及数据库名</span><br><span class="line">-outfmt：输出文件格式，总共有17种格式，6是tabular格式（对应BLAST的m8格式），最新版BLAST+的17是sam格式。</span><br><span class="line">-evalue：设置输出结果的e-value值</span><br><span class="line">-num_descriptions：tabular格式输出结果的条数</span><br><span class="line">-num_threads：线程数</span><br></pre></td></tr></table></figure></li></ul><p>更多参数信息可直接输入blastn -help查阅。</p><ul><li><p>Blastn程序的default value为magablast。Megablast 是在intra-species或者very closely related species中使用的blast版本，其特点是word_size较大（默认值为28bp），这样就可以在initial match过程排除掉很多情况，从而加快比对速度。而对于inter-species的两个较短片段就无法搜寻到结果，这种情况可以增加 –task blastn，就一切正常了。</p></li><li><p>新BLAST+中最拉风的功能是直接控制输出格式，如：-outfmt format “7 qacc sacc evalue length pident”<br>7表示带注释行的tab格式的输出，可以自定义要输出哪些内容，用空格分格跟在7的后面，并把所有的输出控制用双引号括起来，其中qacc查询序列的acc,sacc表示目标序列的acc，evalue即是e值，length即是匹配的长度，pident即是序列相同的百分比。其他可用的选项参见最后。</p></li><li><p>其它程序，如蛋白序列比对蛋白数据库（blastp）以及核酸序列比对蛋白数据库（blastx）等，用法与blastn类似：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blastp -query seq.fasta -out seq.blast -db dbname -outfmt 6 -evalue 1e-5 -num_descriptions 10 -num_threads 8</span><br><span class="line">blastx -query seq.fasta -out seq.blast -db dbname -outfmt 6 -evalue 1e-5 -num_descriptions 10 -num_threads 8</span><br></pre></td></tr></table></figure></li></ul><p>完整的参数说明可以用-help查询。</p><h3 id="4-3-也可以直接下载NCBI已经格式化好的库-NCBI-curated-database-，直接在本地库中比对，以蛋白质库nr为例："><a href="#4-3-也可以直接下载NCBI已经格式化好的库-NCBI-curated-database-，直接在本地库中比对，以蛋白质库nr为例：" class="headerlink" title="4.3 也可以直接下载NCBI已经格式化好的库(NCBI-curated database)，直接在本地库中比对，以蛋白质库nr为例："></a>4.3 也可以直接下载NCBI已经格式化好的库(NCBI-curated database)，直接在本地库中比对，以蛋白质库nr为例：</h3><ul><li><p>下载库可使用BLAST+自带的update_blastdb.pl脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/blast/blastdb/ #切换到本地BLAST库目录</span><br><span class="line">update_blastdb.pl  nr</span><br><span class="line">tar -xzvf *.gz</span><br><span class="line">rm *.gz*  #删除下载的文件</span><br><span class="line">blastp -db nr -query somesequence.fasta</span><br></pre></td></tr></table></figure></li><li><p>如果没有下载本地化nr库，可添加-remote选项，进行在线比对（就不能使用-num_threads参数了），但速度慢一些，适合序列不多的情况。</p></li></ul><hr><blockquote><p>Formatting options<br>-outfmt <string><br>alignment view options:<br>0 = Pairwise,<br>1 = Query-anchored showing identities,<br>2 = Query-anchored no identities,<br>3 = Flat query-anchored showing identities,<br>4 = Flat query-anchored no identities,<br>5 = BLAST XML,<br>6 = Tabular,<br>7 = Tabular with comment lines,<br>8 = Seqalign (Text ASN.1),<br>9 = Seqalign (Binary ASN.1),<br>10 = Comma-separated values,<br>11 = BLAST archive (ASN.1),<br>12 = Seqalign (JSON),<br>13 = Multiple-file BLAST JSON,<br>14 = Multiple-file BLAST XML2,<br>15 = Single-file BLAST JSON,<br>16 = Single-file BLAST XML2,<br>17 = Sequence Alignment/Map (SAM),<br>18 = Organism Report<br>Options 6, 7, and 10 can be additionally configured to produce<br>a custom format specified by space delimited format specifiers.<br>The supported format specifiers are:<br>qseqid means Query Seq-id<br>qgi means Query GI<br>qacc means Query accesion<br>qaccver means Query accesion.version<br>qlen means Query sequence length<br>sseqid means Subject Seq-id<br>sallseqid means All subject Seq-id(s), separated by a ‘;’<br>sgi means Subject GI<br>sallgi means All subject GIs<br>sacc means Subject accession<br>saccver means Subject accession.version<br>sallacc means All subject accessions<br>slen means Subject sequence length<br>qstart means Start of alignment in query<br>qend means End of alignment in query<br>sstart means Start of alignment in subject<br>send means End of alignment in subject<br>qseq means Aligned part of query sequence<br>sseq means Aligned part of subject sequence<br>evalue means Expect value<br>bitscore means Bit score<br>score means Raw score<br>length means Alignment length<br>pident means Percentage of identical matches<br>nident means Number of identical matches<br>mismatch means Number of mismatches<br>positive means Number of positive-scoring matches<br>gapopen means Number of gap openings<br>gaps means Total number of gaps<br>ppos means Percentage of positive-scoring matches<br>frames means Query and subject frames separated by a ‘/‘<br>qframe means Query frame<br>sframe means Subject frame<br>btop means Blast traceback operations (BTOP)<br>staxids means unique Subject Taxonomy ID(s), separated by a ‘;’<br>(in numerical order)<br>sscinames means unique Subject Scientific Name(s), separated by a ‘;’<br>scomnames means unique Subject Common Name(s), separated by a ‘;’<br>sblastnames means unique Subject Blast Name(s), separated by a ‘;’<br>(in alphabetical order)<br>sskingdoms means unique Subject Super Kingdom(s), separated by a ‘;’<br>(in alphabetical order)<br>stitle means Subject Title<br>salltitles means All Subject Title(s), separated by a ‘&lt;&gt;’<br>sstrand means Subject Strand<br>qcovs means Query Coverage Per Subject<br>qcovhsp means Query Coverage Per HSP<br>When not provided, the default value is:<br>‘qseqid sseqid pident length mismatch gapopen qstart qend sstart send<br>evalue bitscore’, which is equivalent to the keyword ‘std’<br>Default = `0’</string></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下最新版BLAST+的本地化安装与基本使用用法。&lt;br&gt;BLAST的更详细使用方法可参考BLAST手册《BLAST Command Line Applications User Manual》，网址：&lt;a href=&quot;http://www.ncbi.nlm.nih.gov/books/NBK279690/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.ncbi.nlm.nih.gov/books/NBK279690/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="http://blog.ligene.cn/categories/Bioinformatics/"/>
    
    
      <category term="BLAST" scheme="http://blog.ligene.cn/tags/BLAST/"/>
    
      <category term="IGV" scheme="http://blog.ligene.cn/tags/IGV/"/>
    
  </entry>
  
  <entry>
    <title>Notepad2代替Windows记事本</title>
    <link href="http://blog.ligene.cn/2017/07/04/notepad2/"/>
    <id>http://blog.ligene.cn/2017/07/04/notepad2/</id>
    <published>2017-07-04T13:31:15.000Z</published>
    <updated>2018-08-02T04:02:41.713Z</updated>
    
    <content type="html"><![CDATA[<p>Windows记事本的功能比较弱，有时不能胜任文本数据处理，如打开大文件会很慢、不能识别Linux系统的换行符等。<br>Notepad2是一款优秀的<strong>轻量级文本编辑器</strong>，而Notepad2-mod又增强了一些功能，如语法高亮、代码折叠、自动代替Windows记事本等。<br>修改版的下载地址：<a href="https://xhmikosr.github.io/notepad2-mod/" target="_blank" rel="noopener">https://xhmikosr.github.io/notepad2-mod/</a><br><a id="more"></a></p><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>安装过程中注意选上：“Replace Windows notepad with Notepad2-mod”(下图),将自动代替Windows自带的记事本。<br><img src="/downloads/notepad2_setup.png" alt="Notepad2 Setup"></p><h3 id="2-添加Notepad2到右键菜单，方便右键直接打开文档"><a href="#2-添加Notepad2到右键菜单，方便右键直接打开文档" class="headerlink" title="2.添加Notepad2到右键菜单，方便右键直接打开文档:"></a>2.添加Notepad2到右键菜单，方便右键直接打开文档:</h3><p>把以下内容拷到任意以.reg为后缀的文件（如notepad2_shortcut.reg），后运行导入系统注册表即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\Notepad2]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\Notepad2\command]</span><br><span class="line">@=&quot;\&quot;C:\\Program Files\\Notepad2\\Notepad2.exe\&quot; \&quot;%1\&quot;&quot;</span><br></pre></td></tr></table></figure></p><h3 id="3-简单配置"><a href="#3-简单配置" class="headerlink" title="3.简单配置"></a>3.简单配置</h3><ul><li>View菜单，不要勾选“Long Line Marker”, “Code Folding”。</li><li>Settings菜单，勾选”Remember Recent Files”。</li><li>File菜单的”Line Endings”可以转换为Windows/Linux/Mac的换行符。</li><li>File菜单的”Encoding”可以设置Default编码为”UTF-8”。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Windows记事本的功能比较弱，有时不能胜任文本数据处理，如打开大文件会很慢、不能识别Linux系统的换行符等。&lt;br&gt;Notepad2是一款优秀的&lt;strong&gt;轻量级文本编辑器&lt;/strong&gt;，而Notepad2-mod又增强了一些功能，如语法高亮、代码折叠、自动代替Windows记事本等。&lt;br&gt;修改版的下载地址：&lt;a href=&quot;https://xhmikosr.github.io/notepad2-mod/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://xhmikosr.github.io/notepad2-mod/&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Uncategorized" scheme="http://blog.ligene.cn/categories/Uncategorized/"/>
    
    
      <category term="Notepad" scheme="http://blog.ligene.cn/tags/Notepad/"/>
    
  </entry>
  
  <entry>
    <title>基于GitHub和Hexo搭建个人博客</title>
    <link href="http://blog.ligene.cn/2017/06/25/firstBlog/"/>
    <id>http://blog.ligene.cn/2017/06/25/firstBlog/</id>
    <published>2017-06-25T06:39:02.000Z</published>
    <updated>2018-08-02T04:03:13.298Z</updated>
    
    <content type="html"><![CDATA[<p>第一篇博文，记录此博客的搭建过程。<br><a id="more"></a></p><ol><li><p>Git<br>sudo apt-get install git -y</p></li><li><p>NodeJS<br>curl -sL <a href="https://deb.nodesource.com/setup_9.x" target="_blank" rel="noopener">https://deb.nodesource.com/setup_9.x</a> | sudo -E bash -<br>sudo apt-get install nodejs</p></li><li><p>Hexo<br>sudo npm install hexo-cli -g<br>//hexo-cli是hexo的命令行模式, CLI=Command Line Interface<br>hexo –version #v1.0.4</p></li></ol><p><strong>hexo中所有文件的编码格式均是UTF-8</strong>，不然中文显示会有问题，可以通过Notepad2的File菜单中的Encoding选择UTF-8.</p><ol><li>GitHub<br>ssh-keygen -t rsa -C “youdng@hotmail.com”<br>//登陆GitHub，打开「Settings」-&gt;「SSH and GPG keys」，然后点击「new SSH key」，填上任意Title，在Key文本框里粘贴公钥id_rsa.pub文件的内容<br>ssh -T git@github.com<br>git config –global user.name “adong77”<br>git config –global user.email “youdng@hotmail.com”</li></ol><h1 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><p> cd /mnt/c/<br> hexo init Hexo  //其中 Hexo 是自己定义的博客根目录名称，如hexo init myblog<br> cd Hexo/<br><strong>后面安装hexo组件,写博客文章等命令都需要在此目录下进行!</strong></p><p>#Hexo组件：<br> sudo npm install hexo-deployer-git –save<br> //可使用命令hexo d 部署到github上<br> sudo npm install hexo-server –save<br> sudo npm install hexo-generator-sitemap –save<br> sudo npm install hexo-generator-feed –save</p><h1 id="theme"><a href="#theme" class="headerlink" title="theme"></a>theme</h1><p>$ git clone <a href="https://github.com/tufu9441/maupassant-hexo.git" target="_blank" rel="noopener">https://github.com/tufu9441/maupassant-hexo.git</a> themes/maupassant<br>$ npm install hexo-renderer-pug –save<br>$ npm install hexo-renderer-sass –save</p><h1 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h1><p>去阿里云买了这个域名www.ligene.cn，我以blog.ligene.cn作为博客的域名。<br>博客托管在github上的域名是：adong77.github.io，所以建一个CNAME记录，将blog.ligene.cn解析到adong77.github.io。<br>DNS域名解析最常用的是A记录和CNAME记录，A记录把域名解析到服务器IP，CNAME相当于把一个域名指向另一个域名，因此我这个用的是CNAME，要是托管的服务器也是自己搭的那就用A记录了。<br>完事之后得等一段时间,使用下面的命令测一下域名的解析:<br>$ dig blog.sunnyxx.com +nostats +nocomments +nocmd<br>=&gt; output:<br>;; global options: +cmd<br>;blog.ligene.cn.      IN  A<br>blog.ligene.cn.   600    IN  CNAME   adong77.github.io.<br>adong77.github.io.  1468    IN  CNAME   github.map.fastly.net.<br>github.map.fastly.net.  19  IN  A   103.245.222.133<br>这说明是成功了。</p><p>在blog的source目录下建一个CNAME文件，里面写最终指向的域名：blog.ligene.cn。<br>这样第次更新都会保留CNAME文件。</p><h1 id="文章中插入图片"><a href="#文章中插入图片" class="headerlink" title="文章中插入图片"></a>文章中插入图片</h1><p>把图片与*.md文件放在一起，用这种方式插入图片：<br><code>![](gmail.png)</code><br>如果不想放在同一层级,那么就可以这样插入:<br><code>![](foldername/1.png)</code><br>表示引用同层级一个叫做”foldername”文件夹中的1.png图片.</p><h1 id="修改googleapi为sinaapp"><a href="#修改googleapi为sinaapp" class="headerlink" title="修改googleapi为sinaapp"></a>修改googleapi为sinaapp</h1><p>由于众所周知的原因，google服务在某地区受阻，导致网页加载较慢。</p><p>解决方案：</p><h2 id="googleapi-font"><a href="#googleapi-font" class="headerlink" title="googleapi font"></a>googleapi font</h2><p>在hexo\themes.…\source\css_base\variable.styl中，注释掉这句：<br>    //@import url(“<a href="https://fonts.googleapis.com/css?family=Droid+Serif:400italic,700italic,400,700" target="_blank" rel="noopener">https://fonts.googleapis.com/css?family=Droid+Serif:400italic,700italic,400,700</a>“)<br>之后页面会直接加载网站下的：<br>    <a href="http://ibruce.info/css/fonts/fontawesome-webfont.eot" target="_blank" rel="noopener">http://ibruce.info/css/fonts/fontawesome-webfont.eot</a>  </p><h2 id="google-jquery"><a href="#google-jquery" class="headerlink" title="google jquery"></a>google jquery</h2><p>在hexo\themes.…\layout_partial\after_footer.ejs(或者index.ejs等)中将<br><code>&lt;script src=&quot;//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js&quot;&gt;&lt;/script&gt;</code><br>修改为<br><code>&lt;script src=&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;&gt;&lt;/script&gt;</code><br>即可。</p><p>作者：王奥(OX)<br>链接：<a href="https://www.zhihu.com/question/24422335/answer/45424856" target="_blank" rel="noopener">https://www.zhihu.com/question/24422335/answer/45424856</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p><h2 id="内容发布"><a href="#内容发布" class="headerlink" title="内容发布"></a>内容发布</h2><h3 id="修改post预设格式"><a href="#修改post预设格式" class="headerlink" title="修改post预设格式"></a>修改post预设格式</h3><blockquote><p>建议按照个人习惯修改<code>hexo\scaffolds</code>中的<code>post.md</code></p></blockquote><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories:</span><br><span class="line">description:</span><br></pre></td></tr></table></figure><h3 id="生成文章"><a href="#生成文章" class="headerlink" title="生成文章"></a>生成文章</h3><blockquote><p>文章如含有有中文请修改编码为<code>UTF-8</code>避免乱码</p></blockquote><p>1.命令生成初始文章，文件名空格会自动加<code>-</code>hyphen中横线</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="string">"hexo post"</span></span><br></pre></td></tr></table></figure><p>2.在<code>hexo\source\_posts</code>中编辑生成出来的<code>hexo-post</code>文件</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: hexo post #可以改成中文的，如“新文章”</span><br><span class="line">date: 2015-01-14 21:31:42 #发表日期，可自定义修改排序</span><br><span class="line">categories: blog #文章文类</span><br><span class="line">tags: [博客,文章] #文章标签，可以加入多标签</span><br><span class="line">---</span><br><span class="line"><span class="section">#这里是正文，用Markdown书写</span></span><br></pre></td></tr></table></figure><p>3.本地预览文章内容，登录<code>localhost:4000</code>查看效果<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></p><p>4.发布内容到<code>public</code>文件夹，然后同步到GitHub<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><h3 id="导航栏添加自定义页面"><a href="#导航栏添加自定义页面" class="headerlink" title="导航栏添加自定义页面"></a>导航栏添加自定义页面</h3><p>1.命令手动生成自定义页面<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n page <span class="string">"about"</span></span><br></pre></td></tr></table></figure></p><p>2.编辑<code>hexo/source/about/index.md</code>内容<br>3.修改<code>themes/jacman/_config.yml</code>文件<br><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">关于: /about</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇博文，记录此博客的搭建过程。&lt;br&gt;
    
    </summary>
    
      <category term="Uncategorized" scheme="http://blog.ligene.cn/categories/Uncategorized/"/>
    
    
      <category term="Hexo" scheme="http://blog.ligene.cn/tags/Hexo/"/>
    
      <category term="GitHub" scheme="http://blog.ligene.cn/tags/GitHub/"/>
    
  </entry>
  
</feed>
